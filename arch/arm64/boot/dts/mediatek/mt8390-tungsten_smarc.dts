// SPDX-License-Identifier: (GPL-2.0 OR MIT)
/*
 * Copyright (C) 2022 MediaTek Inc.
 * Author: Chris Chen <chris-qj.chen@mediatek.com>
 */
/dts-v1/;
#include "mt8188.dtsi"
#include "mt6359.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/pinctrl/mediatek,mt8188-pinfunc.h>
#include <dt-bindings/usb/pd.h>

&pio {
	aud_pins_default: audiodefault {
		pins-cmd-dat {
			pinmux = <PINMUX_GPIO101__FUNC_O_AUD_CLK_MOSI>,
				 <PINMUX_GPIO102__FUNC_O_AUD_SYNC_MOSI>,
				 <PINMUX_GPIO103__FUNC_O_AUD_DAT_MOSI0>,
				 <PINMUX_GPIO104__FUNC_O_AUD_DAT_MOSI1>,
				 <PINMUX_GPIO105__FUNC_I0_AUD_DAT_MISO0>,
				 <PINMUX_GPIO106__FUNC_I0_AUD_DAT_MISO1>,
				 <PINMUX_GPIO107__FUNC_B0_I2SIN_MCK>,
				 <PINMUX_GPIO108__FUNC_B0_I2SIN_BCK>,
				 <PINMUX_GPIO109__FUNC_B0_I2SIN_WS>,
				 <PINMUX_GPIO110__FUNC_I0_I2SIN_D0>,
				 <PINMUX_GPIO114__FUNC_O_I2SO2_MCK>,
				 <PINMUX_GPIO115__FUNC_B0_I2SO2_BCK>,
				 <PINMUX_GPIO116__FUNC_B0_I2SO2_WS>,
				 <PINMUX_GPIO117__FUNC_O_I2SO2_D0>,
				 <PINMUX_GPIO118__FUNC_O_I2SO2_D1>,
				 <PINMUX_GPIO125__FUNC_O_DMIC1_CLK>,
				 <PINMUX_GPIO126__FUNC_I0_DMIC1_DAT>,
				 <PINMUX_GPIO128__FUNC_O_DMIC2_CLK>,
				 <PINMUX_GPIO129__FUNC_I0_DMIC2_DAT>,
				 <PINMUX_GPIO121__FUNC_B0_PCM_CLK>,
				 <PINMUX_GPIO122__FUNC_B0_PCM_SYNC>,
				 <PINMUX_GPIO124__FUNC_I0_PCM_DI>;
		};
	};

	edp_panel_3v3_en_pins: edp-panel-3v3-en-pins {
		pins1 {
			pinmux = <PINMUX_GPIO15__FUNC_B_GPIO15>;
			output-high;
		};
	};

	dptx_pin: dptx-pin {
		pins-cmd-dat {
			pinmux = <PINMUX_GPIO46__FUNC_I0_DP_TX_HPD>;
			bias-pull-up;
		};
	};

	eth_default_pins: eth-default-pins {
		pins-txd {
			pinmux = <PINMUX_GPIO131__FUNC_O_GBE_TXD3>,
				 <PINMUX_GPIO132__FUNC_O_GBE_TXD2>,
				 <PINMUX_GPIO133__FUNC_O_GBE_TXD1>,
				 <PINMUX_GPIO134__FUNC_O_GBE_TXD0>;
			drive-strength = <MTK_DRIVE_8mA>;
		};
		pins-cc {
			pinmux = <PINMUX_GPIO139__FUNC_B0_GBE_TXC>,
				 <PINMUX_GPIO142__FUNC_O_GBE_TXEN>,
				 <PINMUX_GPIO141__FUNC_I0_GBE_RXDV>,
				 <PINMUX_GPIO140__FUNC_I0_GBE_RXC>;
			drive-strength = <MTK_DRIVE_8mA>;
		};
		pins-rxd {
			pinmux = <PINMUX_GPIO135__FUNC_I0_GBE_RXD3>,
				 <PINMUX_GPIO136__FUNC_I0_GBE_RXD2>,
				 <PINMUX_GPIO137__FUNC_I0_GBE_RXD1>,
				 <PINMUX_GPIO138__FUNC_I0_GBE_RXD0>;
			drive-strength = <MTK_DRIVE_8mA>;
		};
		pins-mdio {
			pinmux = <PINMUX_GPIO143__FUNC_O_GBE_MDC>,
				 <PINMUX_GPIO144__FUNC_B1_GBE_MDIO>;
			drive-strength = <MTK_DRIVE_8mA>;
			input-enable;
		};
#if 0
		pins-power {
#define GP_EQOS_RESET	<&pio 27 GPIO_ACTIVE_LOW>
			pinmux = <PINMUX_GPIO27__FUNC_B_GPIO27>;
			output-high;
		};
#endif
		pins-intr {
#define GPIRQ_EQOS_PHY	<&pio 148 IRQ_TYPE_LEVEL_LOW>
			pinmux = <PINMUX_GPIO148__FUNC_B_GPIO148>;
			input-enable;
		};
	};

	eth_sleep_pins: eth-sleep-pins {
		pins-txd {
			pinmux = <PINMUX_GPIO131__FUNC_B_GPIO131>,
				 <PINMUX_GPIO132__FUNC_B_GPIO132>,
				 <PINMUX_GPIO133__FUNC_B_GPIO133>,
				 <PINMUX_GPIO134__FUNC_B_GPIO134>;
		};
		pins-cc {
			pinmux = <PINMUX_GPIO139__FUNC_B_GPIO139>,
				 <PINMUX_GPIO142__FUNC_B_GPIO142>,
				 <PINMUX_GPIO141__FUNC_B_GPIO141>,
				 <PINMUX_GPIO140__FUNC_B_GPIO140>;
		};
		pins-rxd {
			pinmux = <PINMUX_GPIO135__FUNC_B_GPIO135>,
				 <PINMUX_GPIO136__FUNC_B_GPIO136>,
				 <PINMUX_GPIO137__FUNC_B_GPIO137>,
				 <PINMUX_GPIO138__FUNC_B_GPIO138>;
		};
		pins-mdio {
			pinmux = <PINMUX_GPIO143__FUNC_B_GPIO143>,
				 <PINMUX_GPIO144__FUNC_B_GPIO144>;
			input-disable;
			bias-disable;
		};
	};

	eth_gpio_rx_pins: eth-gpio-rx-pins {
		pins-rx-low {
			pinmux =
#define GP_PHY_RX_CTL		<&pio 141 GPIO_ACTIVE_HIGH>
				<PINMUX_GPIO141__FUNC_B_GPIO141>;
			output-low;
		};
		pins-rx-high {
			pinmux =
#define GP_PHY_RD0		<&pio 135 GPIO_ACTIVE_HIGH>
				<PINMUX_GPIO135__FUNC_B_GPIO135>,
#define GP_PHY_RD1		<&pio 136 GPIO_ACTIVE_HIGH>
				<PINMUX_GPIO136__FUNC_B_GPIO136>,
#define GP_PHY_RD2		<&pio 137 GPIO_ACTIVE_HIGH>
				<PINMUX_GPIO137__FUNC_B_GPIO137>,
#define GP_PHY_RD3		<&pio 138 GPIO_ACTIVE_HIGH>
				<PINMUX_GPIO138__FUNC_B_GPIO138>,
#define GP_PHY_RXC		<&pio 140 GPIO_ACTIVE_HIGH>
				<PINMUX_GPIO140__FUNC_B_GPIO140>;
			output-high;
		};
	};

	uart0_pins: uart0-pins {
		pins {
			pinmux = <PINMUX_GPIO31__FUNC_O_UTXD0>,
				 <PINMUX_GPIO32__FUNC_I1_URXD0>;
			bias-pull-up;
		};
	};

	uart1_pins: uart1-pins {
		pins {
			pinmux = <PINMUX_GPIO33__FUNC_O_UTXD1>,
				 <PINMUX_GPIO34__FUNC_I1_URXD1>,
				 <PINMUX_GPIO35__FUNC_O_URTS1>,
				 <PINMUX_GPIO36__FUNC_I1_UCTS1>;
			bias-pull-up;
		};
	};

	i2c0_pin: i2c0-pin {
		pins-bus {
			pinmux = <PINMUX_GPIO56__FUNC_B1_SDA0>,
				 <PINMUX_GPIO55__FUNC_B1_SCL0>;
			bias-pull-up = <MTK_PULL_SET_RSEL_011>;
			mediatek,drive-strength-adv = <7>;
		};
	};

	i2c1_pin: i2c1-pin {
		pins-bus {
			pinmux = <PINMUX_GPIO58__FUNC_B1_SDA1>,
				 <PINMUX_GPIO57__FUNC_B1_SCL1>;
			bias-pull-up = <MTK_PULL_SET_RSEL_011>;
			mediatek,drive-strength-adv = <7>;
		};
	};

	i2c3_pin: i2c3-pin {
		pins-bus {
			pinmux = <PINMUX_GPIO62__FUNC_B1_SDA3>,
				 <PINMUX_GPIO61__FUNC_B1_SCL3>;
			bias-pull-up = <MTK_PULL_SET_RSEL_011>;
			mediatek,drive-strength-adv = <7>;
		};
	};

	i2c4_pin: i2c4-pin {
		pins-bus {
			pinmux = <PINMUX_GPIO64__FUNC_B1_SDA4>,
				 <PINMUX_GPIO63__FUNC_B1_SCL4>;
			bias-pull-up = <MTK_PULL_SET_RSEL_011>;
			mediatek,drive-strength-adv = <7>;
		};
	};

	rt1715_int: rt1715_int_pin {
		pins_cmd0_dat {
			pinmux = <PINMUX_GPIO12__FUNC_B_GPIO12>;
			bias-pull-up;
			input-enable;
		};
	};

	panel_pins_default: panel-pins-default {
		panel-dcdc {
			pinmux = <PINMUX_GPIO45__FUNC_B_GPIO45>;
			output-low;
		};

		panel-en {
			pinmux = <PINMUX_GPIO111__FUNC_B_GPIO111>;
			output-low;
		};

		panel-rst {
			pinmux = <PINMUX_GPIO25__FUNC_B_GPIO25>;
			output-high;
		};
	};

	mmc0_pins_default: mmc0default {
		pins-cmd-dat {
			pinmux = <PINMUX_GPIO161__FUNC_B1_MSDC0_DAT0>,
				 <PINMUX_GPIO160__FUNC_B1_MSDC0_DAT1>,
				 <PINMUX_GPIO159__FUNC_B1_MSDC0_DAT2>,
				 <PINMUX_GPIO158__FUNC_B1_MSDC0_DAT3>,
				 <PINMUX_GPIO154__FUNC_B1_MSDC0_DAT4>,
				 <PINMUX_GPIO153__FUNC_B1_MSDC0_DAT5>,
				 <PINMUX_GPIO152__FUNC_B1_MSDC0_DAT6>,
				 <PINMUX_GPIO151__FUNC_B1_MSDC0_DAT7>,
				 <PINMUX_GPIO156__FUNC_B1_MSDC0_CMD>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins-clk {
			pinmux = <PINMUX_GPIO157__FUNC_B1_MSDC0_CLK>;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};

		pins-rst {
			pinmux = <PINMUX_GPIO155__FUNC_O_MSDC0_RSTB>;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};
	};

	mmc0_pins_uhs: mmc0uhs{
		pins-cmd-dat {
			pinmux = <PINMUX_GPIO161__FUNC_B1_MSDC0_DAT0>,
				 <PINMUX_GPIO160__FUNC_B1_MSDC0_DAT1>,
				 <PINMUX_GPIO159__FUNC_B1_MSDC0_DAT2>,
				 <PINMUX_GPIO158__FUNC_B1_MSDC0_DAT3>,
				 <PINMUX_GPIO154__FUNC_B1_MSDC0_DAT4>,
				 <PINMUX_GPIO153__FUNC_B1_MSDC0_DAT5>,
				 <PINMUX_GPIO152__FUNC_B1_MSDC0_DAT6>,
				 <PINMUX_GPIO151__FUNC_B1_MSDC0_DAT7>,
				 <PINMUX_GPIO156__FUNC_B1_MSDC0_CMD>;
			input-enable;
			drive-strength = <MTK_DRIVE_8mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins-clk {
			pinmux = <PINMUX_GPIO157__FUNC_B1_MSDC0_CLK>;
			drive-strength = <MTK_DRIVE_8mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};

		pins-ds {
			pinmux = <PINMUX_GPIO162__FUNC_B0_MSDC0_DSL>;
			drive-strength = <MTK_DRIVE_8mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};

		pins-rst {
			pinmux = <PINMUX_GPIO155__FUNC_O_MSDC0_RSTB>;
			drive-strength = <MTK_DRIVE_8mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};
	};

	mmc1_pins_default: mmc1default {
		pins-cmd-dat {
			pinmux = <PINMUX_GPIO163__FUNC_B1_MSDC1_CMD>,
				 <PINMUX_GPIO165__FUNC_B1_MSDC1_DAT0>,
				 <PINMUX_GPIO166__FUNC_B1_MSDC1_DAT1>,
				 <PINMUX_GPIO167__FUNC_B1_MSDC1_DAT2>,
				 <PINMUX_GPIO168__FUNC_B1_MSDC1_DAT3>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins-clk {
			pinmux = <PINMUX_GPIO164__FUNC_B1_MSDC1_CLK>;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};

		pins-insert {
#define GP_MMC1_CD	<&pio 2 GPIO_ACTIVE_LOW>
			pinmux = <PINMUX_GPIO2__FUNC_B_GPIO2>;
			bias-pull-up;
		};
	};

	mmc1_pins_uhs: mmc1uhs {
		pins-cmd-dat {
			pinmux = <PINMUX_GPIO163__FUNC_B1_MSDC1_CMD>,
				 <PINMUX_GPIO165__FUNC_B1_MSDC1_DAT0>,
				 <PINMUX_GPIO166__FUNC_B1_MSDC1_DAT1>,
				 <PINMUX_GPIO167__FUNC_B1_MSDC1_DAT2>,
				 <PINMUX_GPIO168__FUNC_B1_MSDC1_DAT3>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins-clk {
			pinmux = <PINMUX_GPIO164__FUNC_B1_MSDC1_CLK>;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};
	};

	mmc2_pins_default: mmc2default {
		pins-clk {
			pinmux = <PINMUX_GPIO170__FUNC_B1_MSDC2_CLK>;
			drive-strength = <MTK_DRIVE_4mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};

		pins-cmd-dat {
			pinmux = <PINMUX_GPIO169__FUNC_B1_MSDC2_CMD>,
				 <PINMUX_GPIO171__FUNC_B1_MSDC2_DAT0>,
				 <PINMUX_GPIO172__FUNC_B1_MSDC2_DAT1>,
				 <PINMUX_GPIO173__FUNC_B1_MSDC2_DAT2>,
				 <PINMUX_GPIO174__FUNC_B1_MSDC2_DAT3>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins-pcm {
			pinmux = <PINMUX_GPIO123__FUNC_O_PCM_DO>;
		};
	};

	mmc2_pins_uhs: mmc2uhs {
		pins-clk {
			pinmux = <PINMUX_GPIO170__FUNC_B1_MSDC2_CLK>;
			drive-strength = <MTK_DRIVE_4mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};

		pins-cmd-dat {
			pinmux = <PINMUX_GPIO169__FUNC_B1_MSDC2_CMD>,
				 <PINMUX_GPIO171__FUNC_B1_MSDC2_DAT0>,
				 <PINMUX_GPIO172__FUNC_B1_MSDC2_DAT1>,
				 <PINMUX_GPIO173__FUNC_B1_MSDC2_DAT2>,
				 <PINMUX_GPIO174__FUNC_B1_MSDC2_DAT3>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};
	};

	mmc2_pins_eint: dat1-eint {
		pins-dat1 {
			pinmux = <PINMUX_GPIO172__FUNC_B_GPIO172>;
			input-enable;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};
	};

	mmc2_pins_dat1: sdio-dat1 {
		pins-dat1 {
			pinmux = <PINMUX_GPIO172__FUNC_B1_MSDC2_DAT1>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};
	};

	wifi_pins_pwrseq: wifipwrseq {
		pins-wifi-enable {
			pinmux = <PINMUX_GPIO127__FUNC_B_GPIO127>;
			output-low;
		};
	};

	spi0_pins: spi0-pins {
		pins-spi {
			pinmux = <PINMUX_GPIO69__FUNC_O_SPIM0_CSB>,
				<PINMUX_GPIO70__FUNC_O_SPIM0_CLK>,
				<PINMUX_GPIO71__FUNC_B0_SPIM0_MOSI>,
				<PINMUX_GPIO72__FUNC_B0_SPIM0_MISO>;
			bias-disable;
		};
	};

	spi1_pins: spi1-pins {
		pins-spi {
			pinmux = <PINMUX_GPIO75__FUNC_O_SPIM1_CSB>,
				<PINMUX_GPIO76__FUNC_O_SPIM1_CLK>,
				<PINMUX_GPIO77__FUNC_B0_SPIM1_MOSI>,
				<PINMUX_GPIO78__FUNC_B0_SPIM1_MISO>;
			bias-disable;
		};
	};

	spi2_pins: spi2-pins {
		pins-spi {
			pinmux = <PINMUX_GPIO79__FUNC_O_SPIM2_CSB>,
				<PINMUX_GPIO80__FUNC_O_SPIM2_CLK>,
				<PINMUX_GPIO81__FUNC_B0_SPIM2_MOSI>,
				<PINMUX_GPIO82__FUNC_B0_SPIM2_MISO>;
			bias-disable;
		};
	};

	pcie_pins_default: pcie-default {
		mux {
			pinmux = <PINMUX_GPIO47__FUNC_I1_WAKEN>,
				 <PINMUX_GPIO48__FUNC_O_PERSTN>,
				 <PINMUX_GPIO49__FUNC_B1_CLKREQN>;
			bias-pull-up;
		};
	};

	usb_default: usbdefault {
		iddig-pin {
			pinmux = <PINMUX_GPIO83__FUNC_B_GPIO83>;
			input-enable;
			bias-pull-up;
		};

		vbus-pins {
			pinmux = <PINMUX_GPIO84__FUNC_O_USB_DRVVBUS>;
			output-high;
		};

		valid-pin {
			pinmux = <PINMUX_GPIO85__FUNC_I0_VBUSVALID>;
			input-enable;
		};
	};

	usb1_default: usbp1default {
		valid_pin {
			pinmux = <PINMUX_GPIO88__FUNC_I0_VBUSVALID_1P>;
			input-enable;
		};

		usb-hub-3v3-en-pin {
			pinmux = <PINMUX_GPIO112__FUNC_B_GPIO112>;
			output-high;
		};
	};

	touch_pins: touchdefault {
		touch_pin_irq: pin-irq {
			pinmux = <PINMUX_GPIO6__FUNC_B_GPIO6>;
			input-enable;
			bias-disable;
		};

		touch_pin_reset: pin-reset {
			pinmux = <PINMUX_GPIO5__FUNC_B_GPIO5>;
			output-high;
		};
	};
};

/ {
	model = "MediaTek Genio-700 EVK";
	compatible = "mediatek,mt8390-evk", "mediatek,mt8188";

	aliases {
		serial0 = &uart0;
		dsi0 = &dsi0;
		ethernet0 = &eth;
		mipi = &fb_mipi;
		mipi_dsi = &dsi0;
		mipi_to_lvds = &mipi_to_lvds;
		t_mipi = &t_mipi;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	edp_panel_fixed_3v3: regulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "edp_panel_3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		enable-active-high;
		gpio = <&pio 15 GPIO_ACTIVE_HIGH>;
		pinctrl-names = "default";
		pinctrl-0 = <&edp_panel_3v3_en_pins>;
	};

	memory@40000000 {
		device_type = "memory";
		reg = <0 0x40000000 0x2 0x00000000>;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		apu_reserve_memory: apu-reserve-memory{
			compatible = "shared-dma-pool";
			size = <0 0x1400000>; //20 MB
			alignment = <0 0x10000>;
			reg = <0 0x55000000 0 0x1400000>;
		};

		vpu_reserve_memory: vpu-reserve-memory {
			compatible = "shared-dma-pool";
			size = <0 0x1400000>; //20 MB
			alignment = <0 0x10000>;
			reg = <0 0x57000000 0 0x1400000>;
		};

		/* 12 MiB reserved for OP-TEE (BL32)
		 * +-----------------------+ 0x43e0_0000
		 * |      SHMEM 2MiB       |
		 * +-----------------------+ 0x43c0_0000
		 * |        | TA_RAM  8MiB |
		 * + TZDRAM +--------------+ 0x4340_0000
		 * |        | TEE_RAM 2MiB |
		 * +-----------------------+ 0x4320_0000
		 */
		optee_reserved: optee@43200000 {
			no-map;
			reg = <0 0x43200000 0 0x00c00000>;
		};

		scp_mem_reserved: scp-mem-region {
			compatible = "shared-dma-pool";
			reg = <0 0x50000000 0 0x2900000>;
			no-map;
		};

		/* 2 MiB reserved for ARM Trusted Firmware (BL31) */
		bl31_secmon_reserved: secmon@54600000 {
			no-map;
			reg = <0 0x54600000 0x0 0x200000>;
		};
	};

	firmware {
		optee {
			compatible = "linaro,optee-tz";
			method = "smc";
		};
	};

	usb_p0_vbus: usb0-otg-vbus {
		compatible = "regulator-fixed";
		regulator-name = "p0_vbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&pio 84 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	usb_p1_vbus: usb-p1-vbus {
		compatible = "regulator-fixed";
		regulator-name = "p1_vbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&pio 87 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	usb_p2_vbus: usb-p2-vbus {
		compatible = "regulator-fixed";
		regulator-name = "p2_vbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		enable-active-high;
	};

	hub3v3: regulator@4 {
		compatible = "regulator-fixed";
		regulator-name = "vhub3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&pio 112 0>; /* HUB_3V3_EN */
		startup-delay-us = <10000>;
		enable-active-high;
	};

	onboard_hub: regulator@5 {
		compatible = "regulator-fixed";
		regulator-name = "hub_reset";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		gpio = <&pio 7 0>; /* HUB_RESET */
		vin-supply = <&hub3v3>;
		enable-active-low;
	};

	lcm1_tp_avdd: lcm1-tp-avdd {
		compatible = "regulator-fixed";
		regulator-name = "lcm1-tp-avdd";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&pio 119 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	reg_1p8v: regulator-1p8v {
		compatible = "regulator-fixed";
		regulator-name = "fixed-1.8V";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-boot-on;
		regulator-always-on;
	};

	reg_3p3v: regulator-3p3v {
		compatible = "regulator-fixed";
		regulator-name = "fixed-3.3V";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
		regulator-always-on;
	};

	reg_vref_5v0: regulator-vref-5v0 {
		compatible = "regulator-fixed";
		regulator-name = "vref-5v0";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
	};

	VDD_5V: VDD-5V {
		compatible = "regulator-fixed";
		regulator-name = "VDD-5V";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&pio 10 GPIO_ACTIVE_HIGH>;
		enable-active-high;
		regulator-always-on;
	};

	VDD_3V3: VDD-3V3 {
		compatible = "regulator-fixed";
		regulator-name = "VDD-3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&pio 9 GPIO_ACTIVE_HIGH>;
		enable-active-high;
		regulator-always-on;
	};

	sdio_fixed_3v3: regulator@2 {
		compatible = "regulator-fixed";
		regulator-name = "sdio_card";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&pio 74 0>;
		enable-active-high;
		regulator-always-on;
	};

	sdio_fixed_1v8: regulator@3 {
		compatible = "regulator-fixed";
		regulator-name = "sdio_io";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		enable-active-high;
		regulator-always-on;
	};
};

&afe {
	#sound-dai-cells = <0>;
	mediatek,dmic-iir-on;
	mediatek,dmic-clk-mono;
	status = "okay";
};

&eth {
	avddh-supply = <&mt6359_vpa_buck_reg>;
	mediatek,mac-wol;
	phy-mode ="rgmii-rxid";
	phy-handle = <&ethernet_phy0>;
	pinctrl-names = "default", "sleep", "gpio-rx";
	pinctrl-0 = <&eth_default_pins>;
	pinctrl-1 = <&eth_sleep_pins>;
	pinctrl-2 = <&eth_gpio_rx_pins>;
	status = "okay";

	mdio {
		compatible = "snps,dwmac-mdio";
		#address-cells = <1>;
		#size-cells = <0>;

		ethernet_phy0: ethernet-phy@7 {
			compatible = "ethernet-phy-ieee802.3-c22";
			eee-broken-1000t;
			interrupts-extended = GPIRQ_EQOS_PHY;
			reg = <0x7>;
#ifdef GP_EQOS_RESET
			reset-gpios = GP_EQOS_RESET;
#endif
		};
	};
};

&dpi1 {
	status = "okay";
};

&dp_intf1 {
	status = "okay";
	mediatek,oob-hpd;
	ports {
		port {
			dp_intf1_out: endpoint {
				remote-endpoint = <&dptx_in>;
			};
		};
	};
};

&dp_tx {
	pinctrl-names = "default";
	pinctrl-0 = <&dptx_pin>;
	status = "okay";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;
		port {
			dptx_in: endpoint {
				remote-endpoint = <&dp_intf1_out>;
			};
		};
	};
};

&dsi0 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";
	poweron-in-hs-mode = <0>;
};

&dmic_codec {
	wakeup-delay-ms = <200>;
};

&hdmi0 {
	status = "okay";
};

&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pin>;
	clock-frequency = <400000>;
	status = "okay";
	touchscreen@5d {
		compatible = "goodix,gt9271";
		reg = <0x5d>;
		interrupt-parent = <&pio>;
		interrupts = <6 IRQ_TYPE_EDGE_RISING>;
		irq-gpios = <&pio 6 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&pio 5 GPIO_ACTIVE_HIGH>;
		AVDD28-supply = <&lcm1_tp_avdd>;
		VDDIO-supply = <&mt6359_vio18_ldo_reg>;
		pinctrl-names = "default";
		pinctrl-0 = <&touch_pins>;
	};
};

&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pin>;
	clock-frequency = <400000>;
	status = "okay";

	it5205fn: it5205fn@48 {
		compatible = "mediatek,it5205fn";
		reg = <0x48>;
		type3v3-supply = <&mt6359_vcn33_1_bt_ldo_reg>;
		svid = /bits/ 16 <0xff01>;
		status = "okay";
	};
};

&i2c3 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c3_pin>;
	clock-frequency = <400000>;
	status = "okay";
};

&i2c4 {
	pinctrl-names = "default", "default";
	pinctrl-0 = <&i2c4_pin>;
	pinctrl-1 = <&rt1715_int>;
	clock-frequency = <1000000>;
	status = "okay";

	rt1715@4e {
		compatible = "richtek,rt1715";
		reg = <0x4e>;
		interrupts-extended = <&pio 12 IRQ_TYPE_LEVEL_LOW>;
		vbus-supply = <&usb_p1_vbus>;
		status = "okay";

		usb_con: connector {
			compatible = "usb-c-connector";
			label = "USB-C";
			data-role = "dual";
			power-role = "dual";
			try-power-role = "sink";
			source-pdos = <PDO_FIXED(5000, 2000, PDO_FIXED_DUAL_ROLE |
							PDO_FIXED_DATA_SWAP)>;
			sink-pdos = <PDO_FIXED(5000, 2000, PDO_FIXED_DUAL_ROLE |
							PDO_FIXED_DATA_SWAP)>;
			op-sink-microwatt = <10000000>;
			orientation-switch = <&it5205fn>;
			mode-switch = <&it5205fn>;
			displayport = <&dp_intf1>;

			altmodes {
				dp {
					svid = <0x0ff01>;
					vdo = <0x1c1c47>;
				};
			};

			ports {
				#address-cells = <1>;
				#size-cells = <0>;

				port@0 {
					reg = <0>;
					tcpc_typec_usb: endpoint {
							remote-endpoint = <&ssusb1_ep>;
					};
				};
			};
		};

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {};
		};
	};
};

&pmic {
	interrupt-parent = <&pio>;
	interrupts = <222 IRQ_TYPE_LEVEL_HIGH>;

	pmic_key: pmic-key {
		compatible = "mediatek,mt6359-keys";
		mediatek,long-press-mode = <1>;
		power-off-time-sec = <0>;

		power-key{
			linux,keycodes = <116>;
			wakeup-source;
		};

		home-key{
			linux,keycodes = <114>;
		};
	};
};

&scp {
	memory-region = <&scp_mem_reserved>;
	status = "okay";
};

&mt6359codec {
	mediatek,mic-type-0 = <1>; /* ACC */
	mediatek,mic-type-1 = <3>; /* DCC */
};

&mt6359_vbbck_ldo_reg {
	regulator-always-on;
};

&mt6359_vcn33_2_bt_ldo_reg {
	regulator-always-on;
};

&mt6359_vcore_buck_reg {
	regulator-always-on;
};

&mt6359_vgpu11_buck_reg {
	regulator-always-on;
};

&mt6359_vpu_buck_reg {
	regulator-always-on;
};

&mt6359_vrf12_ldo_reg {
	regulator-always-on;
};

&mt6359_vufs_ldo_reg {
	regulator-always-on;
};

&uart0 {
	pinctrl-0 = <&uart0_pins>;
	pinctrl-names = "default";
	status = "okay";
};

&uart1 {
	pinctrl-0 = <&uart1_pins>;
	pinctrl-names = "default";
	status = "okay";
	uart-has-rtscts;
};

&mipi_tx0 {
	status = "okay";
};

&mmc0 {
	bus-width = <8>;
	cap-mmc-highspeed;
	cap-mmc-hw-reset;
	hs400-ds-delay = <0x1481b>;
	max-frequency = <200000000>;
	mmc-hs200-1_8v;
	mmc-hs400-1_8v;
	non-removable;
	no-sdio;
	no-sd;
	pinctrl-names = "default", "state_uhs";
	pinctrl-0 = <&mmc0_pins_default>;
	pinctrl-1 = <&mmc0_pins_uhs>;
	status = "okay";
	supports-cqe;
	vmmc-supply = <&mt6359_vemc_1_ldo_reg>;
	vqmmc-supply = <&mt6359_vufs_ldo_reg>;
};

&mmc1 {
	bus-width = <4>;
	cap-sd-highspeed;
	cd-gpios = GP_MMC1_CD;
	max-frequency = <200000000>;
	no-mmc;
	no-sdio;
	pinctrl-names = "default", "state_uhs";
	pinctrl-0 = <&mmc1_pins_default>;
	pinctrl-1 = <&mmc1_pins_uhs>;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	status = "okay";
	vmmc-supply = <&reg_3p3v>;
	vqmmc-supply = <&mt6359_vsim1_ldo_reg>;
};

&mt6359_vsim1_ldo_reg {
	regulator-enable-ramp-delay = <480>;
};

&wifi_pwrseq {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&wifi_pins_pwrseq>;

	reset-gpios = <&pio 127 1>;
	post-power-on-delay-ms = <200>;
};

&mmc2 {
	status = "okay";
	pinctrl-names = "default", "state_uhs", "state_eint",
					"state_dat1";
	pinctrl-0 = <&mmc2_pins_default>;
	pinctrl-1 = <&mmc2_pins_uhs>;
	pinctrl-2 = <&mmc2_pins_eint>;
	pinctrl-3 = <&mmc2_pins_dat1>;
	eint-gpios = <&pio 172 0>;
	bus-width = <4>;
	max-frequency = <200000000>;
	cap-sd-highspeed;
	sd-uhs-sdr104;
	keep-power-in-suspend;
	enable-sdio-wakeup;
	cap-sdio-async-int;
	cap-sdio-irq;
	no-mmc;
	no-sd;
	non-removable;
	vmmc-supply = <&sdio_fixed_3v3>;
	vqmmc-supply = <&sdio_fixed_1v8>;
	mmc-pwrseq = <&wifi_pwrseq>;
};

&mt6359_vcn18_ldo_reg {
	regulator-always-on;
};

&spi2 {
	pinctrl-0 = <&spi2_pins>;
	pinctrl-names = "default";
	mediatek,pad-select = <0>;
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	spidev@0 {
		compatible = "mediatek,aiot-board";
		spi-max-frequency = <5000000>;
		reg = <0>;
	};
};

&spmi {
	mt6315_6: mt6315@6 {
		compatible = "mediatek,mt6315-regulator";
		reg = <0x6 0 0xb 1>;

		regulators {
			mt6315_6_vbuck1: vbuck1 {
				regulator-compatible = "vbuck1";
				regulator-name = "Vbcpu";
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1193750>;
				regulator-enable-ramp-delay = <256>;
				regulator-allowed-modes = <0 1 2>;
				regulator-always-on;
				mtk,combined-regulator = <2>;
			};
			mt6315_6_vbuck3: vbuck3 {
				regulator-compatible = "vbuck3";
				regulator-name = "Vdd2";
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1193750>;
				regulator-enable-ramp-delay = <256>;
				regulator-allowed-modes = <0 1 2>;
				regulator-always-on;
			};
			mt6315_6_vbuck4: vbuck4 {
				regulator-compatible = "vbuck4";
				regulator-name = "Vddq";
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1193750>;
				regulator-enable-ramp-delay = <256>;
				regulator-allowed-modes = <0 1 2>;
				regulator-always-on;
			};
		};
	};
};

&pcie {
	pinctrl-names = "default";
	pinctrl-0 = <&pcie_pins_default>;
	status = "okay";
};

&pciephy {
	status = "okay";
};

&ssusb {
	pinctrl-0 = <&usb_default>;
	pinctrl-names = "default";
	maximum-speed = "high-speed";
	usb-role-switch;
	dr_mode = "otg";
	vusb33-supply = <&mt6359_vusb_ldo_reg>;
	status = "okay";
	wakeup-source;

	connector {
		compatible = "gpio-usb-b-connector", "usb-b-connector";
		type = "micro";
		id-gpios = <&pio 83 GPIO_ACTIVE_HIGH>;
		vbus-supply = <&usb_p0_vbus>;
	};
};

&u2port0 {
	status = "okay";
};

&u3phy0 {
	status = "okay";
};

&usb_host0 {
	status = "okay";
	vusb33-supply = <&mt6359_vusb_ldo_reg>;
};

&ssusb1 {
	pinctrl-0 = <&usb1_default>;
	pinctrl-names = "default";
	vusb33-supply = <&mt6359_vusb_ldo_reg>;
	dr_mode = "host";
	mediatek,usb3-drd;
	usb-role-switch;
	status = "okay";
	wakeup-source;

	port {
		ssusb1_ep: endpoint {
			remote-endpoint = <&tcpc_typec_usb>;
		};
	};
};

&u2port1 {
	status = "okay";
};

&u3port1 {
	status = "okay";
};

&u3phy1 {
	status = "okay";
};

&usb_host1 {
	status = "okay";
	vusb33-supply = <&mt6359_vusb_ldo_reg>;
	vbus-supply = <&onboard_hub>;
};

&ssusb2 {
	maximum-speed = "high-speed";
	usb-role-switch;
	dr_mode = "host";
	vusb33-supply = <&mt6359_vusb_ldo_reg>;
	status = "okay";
	wakeup-source;

	connector {
		compatible = "gpio-usb-b-connector", "usb-b-connector";
		type = "micro";
		id-gpios = <&pio 89 GPIO_ACTIVE_HIGH>;
		vbus-supply = <&usb_p2_vbus>;
	};
};

&u2port2 {
	status = "okay";
};

&u3phy2 {
	status = "okay";
};

&usb_host2 {
	status = "okay";
	vusb33-supply = <&mt6359_vusb_ldo_reg>;
};

&mfg0 {
	domain-supply = <&mt6359_vproc2_buck_reg>;
};

&mt6359_vmodem_buck_reg {
	regulator-always-on;
};

&mt6359_vsram_md_ldo_reg {
	regulator-always-on;
};

&sound {
	compatible = "mediatek,mt8390-evk";
	model = "mt8390-evk";
	pinctrl-names = "default";
	pinctrl-0 = <&aud_pins_default>;
	audio-routing =
		"Headphone", "Headphone L",
		"Headphone", "Headphone R",
		"AIN1", "Headset Mic",
		"DMIC_INPUT", "AP DMIC",
		"AP DMIC", "AUDGLB",
		"AP DMIC", "MIC_BIAS_0",
		"AP DMIC", "MIC_BIAS_2";
	status = "okay";

	dai-link-0 {
		sound-dai = <&afe>;
		dai-link-name = "ADDA_BE";
		status = "okay";

		codec-0 {
			sound-dai = <&pmic 0>;
		};

		codec-1 {
			sound-dai = <&dmic_codec>;
		};
	};

	dai-link-1 {
		sound-dai = <&afe>;
		dai-link-name = "ETDM3_OUT_BE";
		status = "okay";

		codec-0 {
			sound-dai = <&hdmi0>;
		};
	};

	dai-link-2 {
		sound-dai = <&afe>;
		dai-link-name = "DPTX_BE";
		status = "okay";

		codec-0 {
			sound-dai = <&dp_tx>;
		};
	};
};

&cam_vcore {
	domain-supply = <&mt6359_vproc1_buck_reg>;
};

&img_vcore {
	domain-supply = <&mt6359_vproc1_buck_reg>;
};


/* J2F */
#define SM_I2C_LCD			i2c2
#define GP_SM_I2C_LCD_CK(a)		<&pio 59 a>
#define PD_SM_I2C_LCD_CK(a)		PINMUX_GPIO59__FUNC_B_GPIO59
#define PD_SM_I2C_LCD_CK_I2C(a)		PINMUX_GPIO59__FUNC_B1_SCL2
#define GP_SM_I2C_LCD_DAT(a)		<&pio 60 a>
#define PD_SM_I2C_LCD_DAT(a)		PINMUX_GPIO60__FUNC_B_GPIO60
#define PD_SM_I2C_LCD_DAT_I2C(a)	PINMUX_GPIO60__FUNC_B1_SDA2

/* J2G */
#define SM_FB_MIPI			dsi0
#define SM_FB_MIPI_SUBSYSTEM		dsi0
#define SM_MIPI_PHY_CLOCK		<&mipi_tx0>
#define SM_MIPI_PIXEL_CLOCK		<&vdosys0 CLK_VDO0_DSI0>

#define GP_SM_LCD0_VDD_EN(a)		<&pio 26 a>
#define PD_SM_LCD0_VDD_EN(a)		PINMUX_GPIO26__FUNC_B_GPIO26

#define SM_PWM_LCD0			disp_pwm0
#define GP_SM_LCD0_BKLT_PWM(a)		<&pio 29 a>
#define PD_SM_LCD0_BKLT_PWM(a)		PINMUX_GPIO29__FUNC_B_GPIO29
#define PD_SM_LCD0_BKLT_PWM_OUT(a)	PINMUX_GPIO29__FUNC_O_DISP_PWM0
/* ******************************************* */

/* ****** bd-universal-smarc ************************************* */
#define concat(a, b)   _concat_(a, b)
#define _concat_(a, b)  a ## b
#define concat4(a, b, c, d)   _concat4_(a, b, c, d)
#define _concat4_(a, b, c, d)  a ## b ## c ## d
#define concat6(a, b, c, d, e, f)   _concat6_(a, b, c, d, e, f)
#define _concat6_(a, b, c, d, e, f)  a ## b ## c ## d ## e ## f
#define concat8(a, b, c, d, e, f, g, h)   _concat8_(a, b, c, d, e, f, g, h)
#define _concat8_(a, b, c, d, e, f, g, h)  a ## b ## c ## d ## e ## f ## g ## h

#define pinctrl(a) concat(pinctrl_, a): concat(a, grp)
#define pinctrl2(a, b) concat4(pinctrl_, a, _, b): concat(a-b, grp)
#define pinctrl3(a, b, c) concat6(pinctrl_, a, _, b, _, c): concat(a-b-c, grp)
#define pinctrl4(a, b, c, d) concat8(pinctrl_, a, _, b, _, c, _, d): concat(a-b-c-d, grp)
#define pinctrl_ref(a) <&concat(pinctrl_, a)>
#define pinctrl_ref2(a, b) <&concat4(pinctrl_, a, _, b)>
#define pinctrl_ref3(a, b, c) <&concat6(pinctrl_, a, _, b, _, c)>
#define pinctrl_ref4(a, b, c, d) <&concat8(pinctrl_, a, _, b, _, c, _, d)>

#define PINS_START	pinmux = <
#define PINS_END	>;
#define PAD_I2C		0
#define PAD_PULLDN	0
#define PAD_PULLDNIRQ	0
&pio {
	pinctrl(SM_I2C_LCD) {
		pins-bus {
			PINS_START
				PD_SM_I2C_LCD_CK_I2C(PAD_I2C)
				PD_SM_I2C_LCD_DAT_I2C(PAD_I2C)
			PINS_END
			bias-pull-up = <MTK_PULL_SET_RSEL_011>;
			mediatek,drive-strength-adv = <7>;
		};
	};

	pinctrl2(SM_I2C_LCD, 1) {
		pins-bus {
			PINS_START
				PD_SM_I2C_LCD_CK(PAD_I2C)
				PD_SM_I2C_LCD_DAT(PAD_I2C)
			PINS_END
			bias-pull-up = <MTK_PULL_SET_RSEL_011>;
			mediatek,drive-strength-adv = <7>;
		};
	};
};

&SM_I2C_LCD {
	clock-frequency = <100000>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = pinctrl_ref(SM_I2C_LCD);
	pinctrl-1 = pinctrl_ref2(SM_I2C_LCD, 1);
	scl-gpios = GP_SM_I2C_LCD_CK(GPIO_OPEN_DRAIN);
	sda-gpios = GP_SM_I2C_LCD_DAT(GPIO_OPEN_DRAIN);
	status = "okay";

	mux9546-lcd@73 {
		compatible = "nxp,pca9546";
#ifdef PD_SM_GPIO13
		pinctrl-names = "default";
		pinctrl-0 = pinctrl_ref(mux9546_lcd);
#endif
		reg = <0x73>;
#ifdef GP_SM_GPIO13
		reset-gpios = GP_SM_GPIO13(GPIO_ACTIVE_LOW);
#endif
		#address-cells = <1>;
		#size-cells = <0>;

		i2c_lcd_a: SM_I2C_LCD@0 {
			/* EDP0 */
			clock-frequency = <100000>;
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <0>;
		};

		i2c_lcd_b: SM_I2C_LCD@1 {
			/* EDP1 */
			clock-frequency = <100000>;
			reg = <1>;
			#address-cells = <1>;
			#size-cells = <0>;
		};

		i2c_lcd_c: SM_I2C_LCD@2 {
			/* DSI0 */
			clock-frequency = <100000>;
			reg = <2>;
			#address-cells = <1>;
			#size-cells = <0>;
		};

		i2c_lcd_d: SM_I2C_LCD@3 {
			/* DSI1 */
			clock-frequency = <100000>;
			reg = <3>;
			#address-cells = <1>;
			#size-cells = <0>;
		};
	};
};

/* J11 mipi display */
#define MIPI_DISPLAY		SM_FB_MIPI
#define MIPI_SUBSYSTEM		SM_FB_MIPI_SUBSYSTEM
#define MIPI_PHY_CLOCK		SM_MIPI_PHY_CLOCK
#define MIPI_PIXEL_CLOCK	SM_MIPI_PIXEL_CLOCK
#define MIPI_I2C_BUS		i2c_lcd_c
#define MIPI_PWM		SM_PWM_LCD0

#define GP_MIPI_PWM(a)		GP_SM_LCD0_BKLT_PWM(a)
#define PD_MIPI_PWM(a)		PD_SM_LCD0_BKLT_PWM(a)	/* Pin 7, S141 */
#define PD_MIPI_PWM_OUT(a)	PD_SM_LCD0_BKLT_PWM_OUT(a)

#define GP_MIPI_ENABLE(a)	GP_SM_LCD0_VDD_EN(a)
#define PD_MIPI_ENABLE(a)	PD_SM_LCD0_VDD_EN(a)	/* Pin 11, S133 */
/* ****** mipi_dsi ************************************* */
/ {
	backlight_mipi: backlight-mipi {
		brightness-levels = <0 1 2 3 4 5 6 7 8 9 10>;
		compatible = "pwm-backlight";
		default-brightness-level = <8>;
		/*
		 * panel-common takes cares of backlight,
		 * skip old style blank/unblank
		 */
		display = <&backlight_mipi>;
		pwms = <&MIPI_PWM 0 30000 0>;		/* 33.3 Khz */
		status = "okay";
	};
};

&dsi0 {
	fb_mipi: panel@0 {
		backlight = <&backlight_mipi>;
		bits-per-color = <8>;
		bridge-de-active = <0>;
		bus-format = "rgb888";
		clocks = <&vdosys0 CLK_VDO0_DSI0_DSI>,
			<&vdosys0 CLK_VDO0_DSI0>;
		clock-names = "mipi_clk", "pixel_clock";
		compatible = "panel,common";
		dsi-format = "rgb888";
		dsi-lanes = <4>;
#if 0
		/* u-boot will set this where appropriate */
		enable-gpios = GP_LTK08_MIPI_EN;
		mipi-cmds = <&mipi_cmds_ltk080a60a004t>;
#endif
		mode-skip-eot;
		mode-video;
		mode-video-burst;
		panel-height-mm = <136>;
		panel-width-mm = <217>;
		pinctrl-names = "default", "sn65dsi83";
		pinctrl-0 = <&panel_pins_default>;
		pinctrl-1 = <&panel_pins_default>, <&pinctrl_sn65dsi83>;
		power-supply = <&reg_vref_5v0>;
		reg = <0>;
		reset-gpios = <&pio 25 GPIO_ACTIVE_HIGH>;
		dcdc-gpios = <&pio 45 GPIO_ACTIVE_HIGH>;
		enable-gpios = <&pio 111 GPIO_ACTIVE_HIGH>;
		sn65dsi83 = <&mipi_to_lvds>;
		status = "okay";
		spwg;

		display-timings {
			t_mipi: t-dsi-default {
				/* m101nwwb by default */
				clock-frequency = <66000000>;
				hactive = <1280>;
				vactive = <800>;
				hback-porch = <5>;
				hfront-porch = <123>;
				vback-porch = <3>;
				vfront-porch = <24>;
				hsync-len = <1>;
				vsync-len = <1>;
#ifdef MIPI_HSYNC_HIGH
				hsync-active = <1>;
				vsync-active = <1>;
#else
				hsync-active = <0>;
				vsync-active = <0>;
#endif
				de-active = <1>;
			};
		};

		mipi_to_lvds: mipi-to-lvds {
			alias = <&mipi_to_lvds>;
			enable-gpios = <&pio 111 GPIO_ACTIVE_HIGH>;
			i2c-address = <0x2c>;
#define MIPI_I2C_BUS		i2c_lcd_c
#define GP_SM_CARRIER_STANDBY(a)	<&pio 9 a>
#define PD_SM_CARRIER_STANDBY(a)	PINMUX_GPIO9__FUNC_O_DMIC2_CLK
#define PD_MIPI_IRQ(a)		PD_SM_CARRIER_STANDBY(a) /* Pin 8, S153 */
			i2c-bus = <&MIPI_I2C_BUS>;
			interrupts-extended = GP_SM_CARRIER_STANDBY(IRQ_TYPE_LEVEL_HIGH);
			status = "okay";
		};

		port {
			panel1_in: endpoint {
				remote-endpoint = <&mipi_dsi_out>;
			};
		};
	};

	ports {
		port {
			mipi_dsi_out: endpoint {
				remote-endpoint = <&panel1_in>;
			};
		};
	};
};

&pio {
	pinctrl(MIPI_PWM) {
		pins {
			PINS_START
				PD_MIPI_PWM_OUT(PAD_PULLDN)
			PINS_END
		};
	};

	pinctrl_sn65dsi83: sn65dsi83grp {
		pins {
			PINS_START
				PD_MIPI_IRQ(PAD_PULLDNIRQ)
				PD_MIPI_ENABLE(PAD_PULLDN)
			PINS_END
		};
	};
};

&MIPI_PWM {
	pinctrl-names = "default";
	pinctrl-0 = pinctrl_ref(MIPI_PWM);
	status = "okay";
};
